<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Group member</h1>
<p><span>Repository: </span><a href="https://github.com/40623143/cd2020">40623143</a><span><span> </span>| Site:<span> </span></span><a href="https://40623143.github.io/cd2020">40623143</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723108/cd2020">40723108</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723108.github.io/cd2020">40723108</a> | 亂數分組程式<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723127/cd2020">40723127</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723127.github.io/cd2020">40723127</a> | 亂數分組程式<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723132/cd2020">40723132</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723132.github.io/cd2020">40723132</a> | 可攜系統<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723133/cd2020">40723133</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723133.github.io/cd2020">40723133</a> | <span>亂數分組程式</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723137/cd2020">40723137</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723137.github.io/cd2020">40723137</a> | 可攜系統<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723141/cd2020">40723141</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723141.github.io/cd2020">40723141</a> <span>| </span><span>可攜系統</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723143/cd2020">40723143</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723143.github.io/cd2020">40723143</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723144/cd2020">40723144</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723144.github.io/cd2020">40723144</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723147/cd2020">40723147</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723147.github.io/cd2020">40723147</a> |<span>亂數分組程式(task leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723148/cd2020">40723148</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723148.github.io/cd2020">40723148</a> | 4輪小車<span>(task leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723150/cd2020">40723150</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723150.github.io/cd2020">40723150</a> <span>| </span><span>可攜系統(task leader)</span><a href="https://s40723150.github.io/cd2020"></a></p>
<h1>分組討論紀錄</h1>
<h2>W2 直播討論</h2>
<p>問題改善：<br/>1.做好的要拍成影片<br/>2.不管會不會做每周都要推東西，不會做的可以問會做的<br/>3.分組倉儲每個組員都先用fork的，之後會把一些人拉做管理者<br/>4.之後直播都會是我負責開，組員都盡量參與有觀看直播的組員盡量發言<br/>5. https://us.misumi-ec.com/us/incadlibrary/ 這個網頁是要做什麼?</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/EfqQYaNAcIc" width="560"></iframe></p>
<h1>可攜系統</h1>
<h4>Create Portable Programming System for Windows 10<br/>Create by 40723150</h4>
<p>在可攜系統目錄下先創一個 data 目錄</p>
<p><span>PortableGit：<br/><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> 下載 64-bit Git for Windows Portable 安裝在 data 目錄下</span></p>
<p><span>MSYS2：<br/><a href="https://www.msys2.org/">https://www.msys2.org/</a> 下載 msys2-x86_64-20190524.exe 並安裝在 data/msys64 的目錄下</span></p>
<p><span>python3.8.1：<br/></span><a class="link" href="https://www.python.org/downloads/windows/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/windows/</a><span><span> </span>下載 Download Windows x86-64 executable installer 準備安裝 3.8.2 python 解譯器，安裝完成後將完整資料放在 data/py381目錄底下<br/>python pip：<br/></span>到<a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a>頁面，滑鼠右鍵另存新檔到CD2020/data執行</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">python get-pip.py</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_163525"></div>
</div>
<p><span></span><span>SciTE：<a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 full 64-bit download，解壓縮檔案至 data/wscite432，就是可以直接執行的 Scite.exe 編輯器，若希望以 UtF-8 編碼開啟文件，就必須啟用 Options 下拉式功能表中的 Global Options File（同 SciTEGlobal.properties 檔案）其中的預設值 code.page=0 （為Windows 內定的 Big-5 編碼）修改設定為 code.page=65001，表示使用使 UTF-8 編碼，若要開啟即時更新內容，將load.on.activate=1 前面的井字號拿掉，就會即時更新了（SciTE 須重啟）<br/><img caption="false" height="538" src="https://s40723150.github.io/cd2020/images/SciTE_UTF-8.gif" width="400"/><br/>修改成 UTF-8 編碼<br/><img caption="false" height="476" src="https://s40723150.github.io/cd2020/images/set_scite_loadon.gif" width="400"/><br/>修改成即時更新</span></p>
<p><span>Tiny C Compiler：<br/></span><span><a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> git clone 整個倉儲到 data 目錄下並命名目錄為 tcc</span></p>
<p><span>Jupyterlab：<br/><a href="https://github.com/jupyterlab/jupyterlab">https://github.com/jupyterlab/jupyterlab</a> pip install jupyterlab==2.0.1 自動執行安裝</span></p>
<p><span>Fossil SCM：<br/><a href="https://www.fossil-scm.org/">https://www.fossil-scm.org/</a> 下載 fossil scm 解壓縮後將 fossil.exe 放到 data 目錄下</span></p>
<p><span>Flutter：<br/><a href="https://github.com/flutter/flutter">https://github.com/flutter/flutter </a> (在 data 目錄底下 git clone https://github.com/flutter/flutter.git -b stable)<br/></span></p>
<p><span>Visual Studio Code：<br/><a href="https://github.com/microsoft/vscode">https://github.com/microsoft/vscode</a> (目前是先安裝，安裝完成後把資料放 data/vscode 目錄下)</span></p>
<p>home/home_mdecourse：存放 ssh 的資料和.gitconfig</p>
<p>tmp：放 clone 下來的倉儲</p>
<p>ShareX：<a href="https://getsharex.com/downloads/">https://getsharex.com/downloads/</a></p>
<p>putty：<a href="http://mde.tw/cp2019/content/USB%20%E7%A8%8B%E5%BC%8F%E7%B3%BB%E7%B5%B1.html">老師整理的 putty</a> 或<span> </span><a href="https://github.com/s40723150/cd2020/raw/master/downloads/putty.7z">個人整理的 putty.7z</a></p>
<p>start.bat</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"
 
%Disk%:
 
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
set USERPROFILE=%Disk%:\home
 
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
 
#REM for putty
#Set GIT_HOME=%CDisk%:\portablegit\bin\
#Set GIT_SSH=%Disk%:\putty\plink.exe
 
set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382
 
set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
set path_git=%Disk%:\portablegit\bin;
set path_tcc=%Disk%:\tcc;
 
path=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_tcc%;
 
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
 
start /MIN %Disk%:\wscite432\wscite\SciTE.exe
start /MIN %Disk%:\wscite432\wscite\SciTE.exe
 
Exit</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_998127"></div>
</div>
<p>stop.bat</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_850557">
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;
 
taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F
 
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
 
EXIT</pre>
</div>
</div>
<p>詳細流程在<a href="https://s40723150.github.io/cd2020/content/W2.html">W2</a>頁面</p>
<p>基礎可攜系統<a href="https://drive.google.com/file/d/15b_VXiaXYLqaMuMAvAeZKegX4eSkiU70/view">下載</a></p><h1>紀錄</h1>
<p>W2：<br/>安裝 python, SciTE, Portablegit, msys2, <span>Tiny C Compiler, Jupyterlab, Fossil SCM, Leo Editor 和 Flutter 放入可攜系統(有先放先前的putty和ssh到測試是否可以順利使用ssh改版)</span></p>
<h4></h4>