<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h4>Develop</h4>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Group member</h1>
<p><span>Repository: </span><a href="https://github.com/40623143/cd2020">40623143</a><span><span> </span>| Site:<span> </span></span><a href="https://40623143.github.io/cd2020">40623143</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723108/cd2020">40723108</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723108.github.io/cd2020">40723108</a> | 亂數分組程式<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723127/cd2020">40723127</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723127.github.io/cd2020">40723127</a> | 亂數分組程式<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723132/cd2020">40723132</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723132.github.io/cd2020">40723132</a> | 可攜系統<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723133/cd2020">40723133</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723133.github.io/cd2020">40723133</a> | <span>亂數分組程式</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723137/cd2020">40723137</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723137.github.io/cd2020">40723137</a> | 可攜系統<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723141/cd2020">40723141</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723141.github.io/cd2020">40723141</a> <span>| </span><span>可攜系統</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723143/cd2020">40723143</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723143.github.io/cd2020">40723143</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723144/cd2020">40723144</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723144.github.io/cd2020">40723144</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723147/cd2020">40723147</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723147.github.io/cd2020">40723147</a> | <span>亂數分組程式(task leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723148/cd2020">40723148</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723148.github.io/cd2020">40723148</a> | 4輪小車<span>(task leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723150/cd2020">40723150</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723150.github.io/cd2020">40723150</a> <span>| </span><span>可攜系統(task leader)</span><a href="https://s40723150.github.io/cd2020"></a></p>
<h1>分組討論紀錄</h1>
<h4>W2 直播討論</h4>
<p>問題改善：<br/>1.做好的要拍成影片<br/>2.不管會不會做每周都要推東西，不會做的可以問會做的<br/>3.分組倉儲每個組員都先用fork的，之後會把一些人拉做管理者<br/>4.之後直播都會是我負責開，組員都盡量參與有觀看直播的組員盡量發言<br/>5. https://us.misumi-ec.com/us/incadlibrary/ 這個網頁是要做什麼?</p>
<p><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/EfqQYaNAcIc" width="560"></iframe></p>
<hr/>
<h4>W3直播討論</h4>
<p>W3 直播討論：<br/>目前Project1的進度，<br/>task leader 負責整理資料推送到ag2倉儲<br/>(須註明哪個組員提供的資料，commit和內容都須注記)<br/>組員也可以用pullrequest請求資料合併</p>
<p>目前進度:<br/>可攜系統可完成網頁頁面和reveal編輯<br/>亂數分組程式<br/>四輪小車</p>
<p>問題討論:<br/>1.亂數分組程式:取到的數值有重複的問題。<br/>2.Pull request 合併頁面出現錯誤(以解決)<br/>3目前個人網頁尚未建立的組員要趕快建立起來<br/>(40623143,40723127,40723137,40723141,40723143)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/h1wE6H3GNFk" width="560"></iframe></p>
<hr/>
<h4>W4 W5直播討論</h4>
<p>目前個人網頁尚未建立的組員要趕快建立起來<br/>(40623143,40723141,40723143)<br/>40723137網頁出不來(已解決)</p>
<p>Assignment 2 任務項目<br/>1.整理 Topic 0 和 Topic 1 的電子書資料<br/>2.了解 <a href="https://cyberbotics.com/doc/guide/index">webots</a> 的資料</p>
<p><br/>分配Assignment 2的工作<br/>1.整理資料<br/><a href="https://drive.google.com/file/d/1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc/view">DigitalProductCollaboration.pdf</a>      預計分配人數2人<br/><a href="https://drive.google.com/file/d/1KRwEcU7Vn65xL6twStG_EWaTKz1Ag8PG/view">IndustrialAndEngineeringProductDesignCollaboration.pdf</a>      預計分配人數3~4人<br/><a href="https://drive.google.com/file/d/13THamnfayiRT4Wa9KzmjXQSP4ZW2jIej/view">MechanicalDesignProcess.pdf</a>      預計分配人數4~5人<br/>2.整理完資料的也要去看webots的資料，協助完成。</p>
<p>轉達：<br/>各組員，儘快準備一個 webcam，以應後續 online 上課及拍攝操作影片所需<br/>每位組員的各種任務操作，都必須在 YouTube 直播加上 OBS 串流模式下，將電腦桌面疊上直播者的 webcam 畫面製作，完成後將影片嵌入個人網頁、網誌及簡報中。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FPsrfCmFD8g" width="560"></iframe></p>
<h1>Project 1</h1>
<h2>亂數分組</h2>
<h4><strong><a href="https://github.com/s40723147/cd2020ag2/blob/master/PDF/cd2020%20ag2%20Project%201%20%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.pdf">pdf連結</a></strong></h4>
<h4>Create by 40723147</h4>
<p>亂數分組<span><span style="background-color: #ffff00;">python</span>程式</span>-甲班</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_570665">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random
groupList=[['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155', '40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150', '40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146', '40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']]
 
group=groupList[0]
#將group數列隨機排列
random.shuffle(group)
#列印數列
print(group)
#列印數列(1~12)
print(group[0:12])
#列印數列(13~24)
print(group[12:24])
#列印數列(25~36)
print(group[24:36])
#列印數列(37~49)
print(group[36:49])</pre>
</div>
</div>
<p><span></span>使用python編寫亂數分組程式</p>
<p>[Python]-隨機random函數</p>
<div>
<div>
<div class="syntaxhighlighter py" id="highlighter_84612">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random</pre>
</div>
</div>
<span><br/></span>匯入 <span>隨機random函數</span></div>
<div><span></span></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_510963">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">groupList=[['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155', '40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150', '40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146', '40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']]</pre>
</div>
</div>
<div>定義 groupList=所有修課學生 共49位</div>
<div></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_181931">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">group=groupList[0]</pre>
</div>
</div>
<div>設定變數group=groupList[0] </div>
<div></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_920113">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">random.shuffle(group)</pre>
</div>
</div>
<div><span><span>使用 random.shuffle</span><br/><br/><span>主要運用在將函數中的順序</span>打亂<br/></span>將函數(<span>group)的順序打亂</span></div>
<div><span></span></div>
<div>
<div>
<div class="syntaxhighlighter py" id="highlighter_12750">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#列印數列
print(group)
#列印數列(1~12)
print(group[0:12])
#列印數列(13~24)
print(group[12:24])
#列印數列(25~36)
print(group[24:36])
#列印數列(37~49)
print(group[36:49])</pre>
</div>
</div>
</div>
<div></div>
<div><span>print 列印運用</span></div>
<div><span></span></div>
<div><span><br/>參考資料:<a href="https://nkust.gitbook.io/python/untitled">https://nkust.gitbook.io/python/untitled</a></span></div>
<div><span style="background-color: #ffcc99;">測試1</span></div>
<div><span><img alt="" height="177" src="https://s40723147.github.io/cd2020/images/%E7%AF%84%E4%BE%8B1.png" width="1190"/></span></div>
<div><span></span></div>
<div><span>標示 1 2 3 4 組</span></div>
<div><span></span></div>
<h4><span>簡略談<strong>Dart、<b>python</b></strong></span></h4>
<div><span></span></div>
<div>
<div><strong><span>Dart</span></strong></div>
<p><span style="background-color: #00ffff;">開放原始碼程式語言</span>，由Google主導開發，於2011年10月公開。它的開發團隊由Google Chrome瀏覽器V8引擎團隊的領導者拉爾斯·巴克主持，目標在於成為下一代結構化Web開發語言。</p>
<p><span style="background-color: #00ffff;">類似JavaScript</span>，<span style="background-color: #00ffff;">Dart也是一種物件導向語言</span>，但是它採用類別為基的程式設計。它只允許單一繼承，<span style="background-color: #00ffff;">語法風格接近C語言。</span></p>
<p>參考資料:<a href="https://zh.wikipedia.org/zh-tw/Dart">https://zh.wikipedia.org/zh-tw/Dart</a></p>
<p><span color="#333333"><span><b>python</b></span></span><span color="#333333"><br/></span></p>
<p><span color="#333333">是一種<span style="background-color: #00ffff;">廣泛使用</span>的直譯式、進階程式、通用型程式語言，由吉多·范羅蘇姆創造，第</span><span color="#333333">一版釋出於1991年。可以視之為一種改良（加入一些其他程式語言的優點，如物件</span><span color="#333333">導向）的LISP。<span style="background-color: #00ffff;">Python的設計哲學強調代碼的可讀性和簡潔的語法</span>（尤其</span><span color="#333333">是使用空格縮排劃分代碼塊，而非使用大括號或者關鍵詞）。相比於C++或Java，</span><span color="#333333">Python讓開發者<span style="background-color: #00ffff;">能夠用更少的代碼表達想法</span>。不管是小型還是大型程式，該語言都</span><span color="#333333">試圖讓程式的結構清晰明瞭。</span></p>
<p>參考資料:<a href="https://zh.wikipedia.org/zh-tw/Python">https://zh.wikipedia.org/zh-tw/Python</a></p>
<hr/>
<p><strong>持續進步</strong></p>
<p>1.可更進一步的對話視窗</p>
<p style="padding-left: 30px;">依照客戶需求給定特定變數完成亂數抽取<br/>例如<span>:</span>給定組別、人數、或是其他條件</p>
<p>2.網頁的程序運用</p>
<p style="padding-left: 30px;">能夠再遠端直接作抽取動作不必下載<br/>可更加方便簡潔快速的抽取方式</p>
<p>3.在網頁上抓取資料</p>
<p style="padding-left: 30px;">能夠在網頁上擷取或是引用資料<br/>直接傳達到亂數程序上提供更方便的服務</p>
<p>4.資料庫存取</p>
<p style="padding-left: 30px;">完成亂數程序後是否可以<br/>直接作存取或是匯出動作</p>
</div>
<h2>可攜系統</h2>
<h4>Create Portable Programming System for Windows 10<br/>Create by 40723150</h4>
<h4><strong><a href="https://github.com/s40723150/cd2020ag2/blob/master/PDF/cd2020%20ag2%20Project%201%20%E5%8F%AF%E6%94%9C%E7%B3%BB%E7%B5%B1.pdf">pdf連結</a></strong></h4>
<p>在可攜系統目錄下先創一個 data 目錄</p>
<p><span>PortableGit：<br/><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> 下載 64-bit Git for Windows Portable 安裝在 data 目錄下</span></p>
<p><span>MSYS2：<br/><a href="https://www.msys2.org/">https://www.msys2.org/</a> 下載 msys2-x86_64-20190524.exe 並安裝在 data/msys64 的目錄下</span></p>
<p><span>python3.8.2：<br/></span><a class="link" href="https://www.python.org/downloads/windows/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/windows/</a><span><span> </span>下載 Download Windows x86-64 executable installer 準備安裝 3.8.2 python 解譯器，安裝完成後將完整資料放在 data/py382目錄底下<br/>python pip：<br/></span>到<a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a>頁面，滑鼠右鍵另存新檔到CD2020/data執行</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">python get-pip.py</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_163525"></div>
</div>
<p><span></span><span>SciTE：<a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 full 64-bit download，解壓縮檔案至 data/wscite432，就是可以直接執行的 Scite.exe 編輯器，若希望以 UtF-8 編碼開啟文件，就必須啟用 Options 下拉式功能表中的 Global Options File（同 SciTEGlobal.properties 檔案）其中的預設值 code.page=0 （為Windows 內定的 Big-5 編碼）修改設定為 code.page=65001，表示使用使 UTF-8 編碼，若要開啟即時更新內容，將load.on.activate=1 前面的井字號拿掉，就會即時更新了（SciTE 須重啟）<br/><img caption="false" height="538" src="https://s40723150.github.io/cd2020/images/SciTE_UTF-8.gif" width="400"/><br/>修改成 UTF-8 編碼<br/><img caption="false" height="476" src="https://s40723150.github.io/cd2020/images/set_scite_loadon.gif" width="400"/><br/>修改成即時更新</span></p>
<p><span>Tiny C Compiler：<br/></span><span><a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> git clone 整個倉儲到 data 目錄下並命名目錄為 tcc</span></p>
<p><span>Jupyterlab：<br/><a href="https://github.com/jupyterlab/jupyterlab">https://github.com/jupyterlab/jupyterlab</a> pip install jupyterlab==2.0.1 自動執行安裝</span></p>
<p><span>Fossil SCM：<br/><a href="https://www.fossil-scm.org/">https://www.fossil-scm.org/</a> 下載 fossil scm 解壓縮後將 fossil.exe 放到 data 目錄下</span></p>
<p><span>Flutter：<br/><a href="https://github.com/flutter/flutter">https://github.com/flutter/flutter </a> (在 data 目錄底下 git clone https://github.com/flutter/flutter.git -b stable)<br/></span></p>
<p><span>Visual Studio Code：<br/><a href="https://github.com/microsoft/vscode">https://github.com/microsoft/vscode</a> (目前是先安裝，安裝完成後把資料放 data/vscode 目錄下)</span></p>
<p>home/home_mdecourse：存放 ssh 的資料和.gitconfig</p>
<p>tmp：放 clone 下來的倉儲</p>
<p>ShareX：<a href="https://getsharex.com/downloads/">https://getsharex.com/downloads/</a></p>
<p>putty：<a href="http://mde.tw/cp2019/content/USB%20%E7%A8%8B%E5%BC%8F%E7%B3%BB%E7%B5%B1.html">老師整理的 putty</a> 或<span> </span><a href="https://github.com/s40723150/cd2020/raw/master/downloads/putty.7z">個人整理的 putty.7z</a></p>
<p>start.bat</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"
 
%Disk%:
 
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
set USERPROFILE=%Disk%:\home
 
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
 
#REM for putty
#Set GIT_HOME=%CDisk%:\portablegit\bin\
#Set GIT_SSH=%Disk%:\putty\plink.exe
 
set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382
 
set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
set path_git=%Disk%:\portablegit\bin;
set path_tcc=%Disk%:\tcc;
 
path=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_tcc%;
 
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
 
start /MIN %Disk%:\wscite432\wscite\SciTE.exe
start /MIN %Disk%:\wscite432\wscite\SciTE.exe
 
Exit</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_998127"></div>
</div>
<p>stop.bat</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_850557">
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;
 
taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F
 
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
 
EXIT</pre>
</div>
</div>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HQzz7f9IopE" width="560"></iframe><br/>詳細流程在<a href="https://s40723150.github.io/cd2020/content/W2.html">W2</a>頁面</p>
<p><span>基礎可攜系統</span><a href="https://drive.google.com/file/d/15b_VXiaXYLqaMuMAvAeZKegX4eSkiU70/view">下載<br/></a><a href="https://drive.google.com/open?id=1Ghi3rTB-HIZEn49PWgfOap7aha2UZvK9">有配置Webots<br/></a><a href="https://drive.google.com/open?id=1TN1NWb0rj675Ld-mb4QRNn-0ECRb2eZG">有配置Webots+</a><span><a href="https://drive.google.com/open?id=1TN1NWb0rj675Ld-mb4QRNn-0ECRb2eZG">CoppeliaSim</a>(含</span><span>xelatex)<br/>P.S. 可以下載可攜系統的leo都已經升級到6.2.1版本了</span></p>
<h2>四輪小車</h2>
<p><span style="background-color: #ffff00;"><big><big>Assignment 1:</big></big></span></p>
<p>Due March 25, 2020 for class 2a .</p>
<p>What do you need to know from <a href="http://www.coppeliarobotics.com/helpFiles/index.html" rel="nofollow">http://www.coppeliarobotics.com/helpFiles/index.html</a> to implement a four-wheeled robot?</p>
<p><span style="background-color: #ffff00;"><big><big>Assignment 2:</big></big></span></p>
<p>Due April 22, 2020 for class 2a.</p>
<ol>
<li>
<p>According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot.</p>
</li>
<li>
<p>What do you need to know from<span> </span><a href="https://cyberbotics.com/doc/guide/index" rel="nofollow">https://cyberbotics.com/doc/guide/index</a><span> </span>to implement a four-wheeled robot?</p>
</li>
</ol>
<p><span style="background-color: #ffff00;"><big><big>Assignment 3:</big></big></span></p>
<p>Due May 27, 2020 for class 2a.</p>
<p>According to the reading of Topic 2 and Topic 3, propose a Mechatronic project by using CoppeliaSim or Webots and Onshape.</p>
<p><big><big><big><a href="https://www.coppeliarobotics.com/">CoppeliaSim</a><span> </span></big></big></big>(<a href="https://www.coppeliarobotics.com/downloads">download</a>)</p>
<p style="text-align: justify;">具有集成開發環境的機器人模擬器CoppeliaSim基於分佈式控制體系結構：可以通過嵌入式腳本，插件，ROS節點，BlueZero節點，遠程API客戶端或自定義解決方案分別控制每個對象/模型。這使CoppeliaSim非常通用，非常適合多機器人應用。控制器可以用C / C ++，Python，Java，Lua，Matlab，Octave或Urbi編寫。</p>
<p style="text-align: justify;">Coppelia Robotics 在<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/versionInfo.htm">CoppeliaSim version history</a> 中提到將不再更新 V-rep <span lang="zh-TW">,並將精力集中在CoppeliaSim上。CoppeliaSim與V-REP 100％兼容。<span style="background-color: #ffff99;">它運行速度比V-REP快，並且具有更多功能</span>。</span></p>
<h3>場景&amp;模型&amp;環境</h3>
<p><span style="background-color: #ffff00;"><big><big>Scenes</big></big></span></p>
<p style="text-align: justify;">場景和模型是CoppeliaSim的主要模擬元素。模型是場景的子元素。一個場景可以包含任何數量的模型</p>
<p><span style="background-color: #ffff00;"><big><big>Models</big></big></span></p>
<p style="text-align: justify;">模型是場景的子元素。除了文件（“ * .ttm”-文件類型）外，模型本身不能存在，也不能通過自身進行模擬。模型必須包含在場景中才能運行<span>。下圖為scenes &amp; Models 之間的關係:</span></p>
<p><span><img alt="" height="473" src="/images/chrome_2020-03-24_00-39-57.png" width="524"/></span></p>
<p><span style="background-color: #ffff00;"><big><big>Environment</big></big></span></p>
<p style="text-align: justify;">CoppeliaSim中的環境定義了屬於場景但不屬於場景物件的屬性和參數。保存模型時不保存環境屬性和參數，但只有保存場景則會</p>
<h3>Calculation modules</h3>
<p><span style="background-color: #ffff00;"><big><big>Collision detection</big></big></span></p>
<p><span style="background-color: #ffff00;"></span></p>
<p><span style="background-color: #ffff00;"><big><big>Distance calculation</big></big></span></p>
<p><span style="background-color: #ffff00;"></span></p>
<p><span style="background-color: #ffff00;"><big><big>Inverse kinematics</big></big></span></p>
<p><span style="background-color: #ffff00;"></span></p>
<p><span style="background-color: #ffff00;"><big><big>Dynamics</big></big></span></p>
<p style="text-align: justify;">CoppeliaSim的動力學模塊當前支持下列四種不同的物理引擎。用戶在任何時候都可以根據自己的仿真需求自由地從一種發動機快速切換到另一種發動機。物理引擎支持如此多樣化的原因是，物理模擬是一項複雜的任務，可以通過不同程度的精度，速度或支持多種功能來實現：</p>
<ul>
<ul>
<ul>
<li>
<p style="text-align: justify;"><a href="http://www.bulletphysics.org/">Bullet physics library</a><span>:</span></p>
<p style="text-align: justify;">一個開源物理引擎，具有3D碰撞檢測，剛體動力學和<span>soft body dynamics</span>（CoppeliaSim當前不支持該功能）。它用於遊戲和電影的視覺效果。它通常被視為遊戲物理引擎。</p>
</li>
<li>
<p style="text-align: justify;"><span><a href="http://www.ode.org/">Open Dynamics Engine (ODE)</a><span>:</span></span></p>
一個具有兩個主要組成部分的開源物理引擎：剛體動力學和碰撞檢測。它已在許多應用程序和遊戲中使用。它通常被視為遊戲物理引擎。</li>
<li>
<p style="text-align: justify;"><span><span><a href="https://www.cm-labs.com/vortex-studio/">VortexÂ® Studio</a><span>:<span> </span></span></span></span></p>
非開源商業物理學引擎，可產生高保真物理模擬。 Vortex提供了大量物理屬性的實際參數（即對應於物理單位），使該引擎既逼真又精確。 Vortex主要用於高性能/高精度工業和研究應用。 CoppeliaSim的Vortex插件基於Vortex Studio，該插件要求每個用戶向CM Labs註冊以獲取免費許可證密鑰。</li>
<li>
<p style="text-align: justify;"><span><span><span><a href="http://www.newtondynamics.com/">Newton Dynamics</a><span>:<span> </span></span></span></span></span></p>
Newton Dynamics是一個跨平台的逼真的物理模擬文庫。它實現了確定性求解器，它不是基於傳統的LCP或<a href="https://zh.wikipedia.org/wiki/%E8%BF%AD%E4%BB%A3">疊代</a>方法，而是分別具有兩者的穩定性和速度。這項功能使Newton Dynamics不僅成為遊戲的工具，而且還成為任何實時物理模擬的工具。當前的插件執行是BETA版本。</li>
</ul>
</ul>
</ul>
<p style="text-align: justify;"></p>
<h3>編寫代碼</h3>
<p>CoppeliaSim是高度可定制的模擬器：可以自定義模擬的每個方面。此外，模擬器本身可以進行定制，以使其性能完全符合要求。這可以通過精心設計的應用程序編程接口（API）來實現。支持六種不同的編程或編碼方法，每種方法都具有相對於其他方法的特殊優點&amp;缺點，但所有六種方法都是相互兼容的（即可以同時使用，甚至可以穿插使用）。模型，場景或模擬器本身的控制實體可以位於以下位置：</p>
<ul>
<li><span>an </span><a href="https://www.coppeliarobotics.com/helpFiles/en/scripts.htm">embedded script</a><span><span> :</span></span></li>
<li><span>an </span><a href="https://www.coppeliarobotics.com/helpFiles/en/addOns.htm">add-on</a><span><span> </span>or<span> </span></span><a href="https://www.coppeliarobotics.com/helpFiles/en/sandboxScript.htm">the sandbox script</a> :</li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/plugins.htm">plugin</a> :</li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiOverview.htm">remote API</a> :</li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/rosInterfaces.htm">ROS node</a><span><span> :</span></span></li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/blueZeroPlugin.htm">BlueZero node</a> :</li>
</ul>
<h3>Simulation(模擬)</h3>
<h4>40723144廖豪樹</h4>
<p>A simulation in CoppeliaSim can be started, paused and stopped with [Menu bar --&gt; Simulation --&gt; Start/Pause/Stop simulation] or through the related toolbar buttons:</p>
<p>可以使用<span style="background-color: #ffff00;">[菜單欄-&gt;模擬-&gt;開始/暫停/停止模擬</span>]或通過相關的工具欄按鈕來啟動，暫停和停止CoppeliaSim中的模擬：</p>
<p> <img alt="" height="83" src="/images/chrome_2020-04-08_09-53-33.png" width="228"/></p>
<p>.</p>
<p><span><span style="color: #ff0000;">Internally(在內部)</span>,<span> </span><span>the <span style="color: #ff0000;">simulator(模擬器)</span></span><span style="color: #ff0000;"> </span>will use<span> </span><span style="color: #ff0000;">additional(額外)</span><span> </span><span style="color: #ff0000;">intermediate(中間) </span>states in order to<span style="color: #ff0000;"> correctly(正確地) inform </span></span><span style="color: #ff0000;"><a href="https://www.coppeliarobotics.com/helpFiles/en/scripts.htm" style="color: #ff0000;">scripts</a>(告知腳本)</span><span><span style="color: #ff0000;"> </span>or programs about what will happen next. Following<span> </span><span style="color: #ff0000;">state diagram(狀態圖)</span><span> </span><span style="color: #ff0000;">illustrates(說明)</span><span> </span>the simulator's<span> </span><span style="color: #ff0000;">internal(內部) </span>states:</span></p>
<p><span>在內部，<span style="background-color: #ffff00;">模擬器將使用其他中間狀態</span>，以正確告知腳本或程序接下來將發生的情況。 <span>以下<span style="background-color: #ffff00;">狀態圖說明了模擬器的內部狀態</span></span>：<br/></span></p>
<p><span><img alt="" height="390" src="/images/ApplicationFrameHost_2020-04-08_11-35-37.png" width="533"/></span></p>
<p>.</p>
<p>Scripts and programs should<span style="color: #ff0000;"> alwaysreact(總是反應)</span> according to the current system call function and possibly the simulation state in order to <span>behave correctly(正確運行)</span>. It is good practice to <span style="color: #ff0000;">divide each(劃分每個)</span> control code into <span>at<span style="color: #ff0000;"> least(至少)</span></span> 4 system call functions (e.g. for<span style="color: #ff0000;"> non-threaded(非線性) </span>child scripts):</p>
<p><span style="background-color: #ffff00;">腳本和程序應始終根據當前系統調用功能以及可能的模擬狀態進行反應</span>，以便正確運行。 優良作法是<span>將每個控制代碼<span style="background-color: #ffff00;">至少分為4個系統調用函數</span></span>（例如，用於非線程子腳本）：</p>
<ul>
<li><strong><span style="color: #ff0000;">In</span><span><span style="color: #ff0000;">itialization(初始化)</span> function:</span></strong> sysCall_init: the function is called only when the script is<span style="color: #ff0000;"> initialized(初始化)</span>.</li>
</ul>
<p style="padding-left: 30px;"><strong><span>初始化函數：</span></strong>sysCall_init：僅在腳本初始化時才調用該函數。</p>
<ul>
<li><strong><span><span style="color: #ff0000;">Actuation(激活)</span> function: </span></strong>sysCall_actuation: the function is called when actuation should happen.</li>
</ul>
<p style="padding-left: 30px;"><strong><span>激活函數</span></strong>：sysCall_actuation：應在發生激活時調用該函數。</p>
<ul>
<li><strong><span><span style="color: #ff0000;">Sensing(感測) </span>function:</span> </strong>sysCall_sensing: this function is called when sensing should happen.</li>
</ul>
<p style="padding-left: 30px;"><strong><span>感測功能：</span></strong>sysCall_sensing：應在感測發生時調用此函數。</p>
<ul>
<li><strong><span><span style="color: #ff0000;">Clean-up(清理)</span> function:</span></strong> sysCall_cleanup: the function is called just before the script is<span style="color: #ff0000;"> de-initialized(未初始化)</span> (e.g. at simulation end, or when the script is <span style="color: #ff0000;">destroyed(銷毀)</span>).</li>
</ul>
<p style="padding-left: 30px;"><strong><span>清理函數：</span></strong>sysCall_cleanup：該函數在腳本未初始化之前被調用（例如在模擬結束時或腳本被銷毀時）。</p>
<p><big><big>Simulation loop</big></big></p>
<h3>Tutorials</h3>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/tutorials.htm">Tutorials</a></p>
<p><img alt="" height="57" src="/images/chrome_2020-03-24_01-07-28.png" width="249"/></p>
<h1>Assignment 2</h1>
<p><a class="link" href="https://drive.google.com/file/d/1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc/view" rel="nofollow noopener noreferrer" target="_blank">DigitalProductCollaboration.pdf</a><span><span> </span></span></p>
<p><a class="link" href="https://drive.google.com/file/d/1KRwEcU7Vn65xL6twStG_EWaTKz1Ag8PG/view" rel="nofollow noopener noreferrer" target="_blank">IndustrialAndEngineeringProductDesignCollaboration.pdf</a><span><span> </span></span></p>
<p><a class="link" href="https://drive.google.com/file/d/13THamnfayiRT4Wa9KzmjXQSP4ZW2jIej/view" rel="nofollow noopener noreferrer" target="_blank">MechanicalDesignProcess.pdf</a><span><span> </span></span></p>
<h2>DigitalProductCollaboration</h2>
<h4>pdf 中英翻譯</h4>
<p>Digital products are more complex today than ever before. Creating them requires multiple team members, each with their own set of skills and expertise. At Savvy, for example, our customers work closely with: a product manager, UX designer, visual designer, developer(s), content strategist, and a growth specialist.<br/>數位產品比以往更加複雜。創建它們需要多個團隊成員，每個成員都有自己的一套技能和專業知識。例如，在Savvy，我們的客戶與以下人員緊密合作：產品經理，UX設計人員，視覺設計師，開發人員，內容戰略家和成長專家。</p>
<p>We use design collaboration to handle this complexity.Done right, designcollaboration empowerseach of those experts with the mindset, process, and tools to come together and build a betterproduct faster.<br/>我們使用設計協同來處理這種複雜性。正確地完成，設計協同可幫助每個專家都有共同的心態，流程和工具，共同建立更好的<br/>產品。</p>
<p>We wrote this resource to help other app creators adopt a collaboration culture and process. Read on to learn why design collaboration is important for creating compelling products and experiences. We'll also dive into the elements of a design collaboration mindset and culture, tools for effective design collaboration, and a real-world example of design collaboration at work.<br/>我們編寫了此資源，以幫助其他應用程序創建者採用協同文化和流程。繼續學習為什麼設計協同對於創造引人注目的產品很重要，以及經驗。我們還將深入探討設計協作心態和文化，工具的要素進行有效的設計協作，以及實際工作中的設計協作示例。</p>
<p>What is "Design" Collaboration?<br/>什麼是"設計"協同？</p>
<p>Before we jump into it, we need to get on the same page about what design collaboration is... and is not. At its simplest, design collaboration is collaboration in a design-first environment. But, because of the nature of design, especially the design we do at Savvy, design collaboration tends to go beyond what people normally think of as collaboration.<br/>在進入之前，我們需要在同一頁面上了解什麼是設計協同簡單來說，設計協作就是在設計優先的環境中進行協作。由於設計的本質，特別是我們在Savvy所做的設計，設計協作趨向於超越人們通常認為的協作</p>
<p>While collaboration is generally defined as two or more people working together on the same task towards a common goal, design collaboration involves much more.<br/>通常將協作定義為兩個或兩個以上的人共同完成一項任務，為了實現共同的目標。</p>
<p>Design collaboration includes more people with different skillsets, tougher challenges, and bigger goals with farther-reaching impacts.<br/>設計協同具有不同技能，艱鉅挑戰和更大規模的人員，具有深遠影響的目標。</p>
<p>You might think of collaboration as two people hanging a piece of art. It simply requires communication, teamwork, and four hands. Design collaboration is when a team of curators carefully design a visitor's experience. They select the art, choose where and how to hang it, which room it lives in (and the room's lighting, furniture), even the preceding rooms and the building as a whole.<br/>您可能將協作視為兩個人掛在一塊藝術品上。它只需要溝通，團隊合作和四隻手。設計協作是指一組策展人精心設計訪問者的考驗。他們選擇藝術品，選擇在何處以及如何懸掛藝術品，它所居住的房間（以及房間的照明，家具），甚至前面的房間和建築物整個。</p>
<p>Why Design Collaboration is Important?<br/>為什麼設計協作很重要?</p>
<p>You can design a product without collaboration, but it takes a collaborative design process to make that product great. That's why design collaboration is so fundamental.</p>
<p>您可以在沒有協作的情況下設計產品，但是需要一個協作設計過程才能使這個產品很棒。這就是設計協作如此重要的原因。</p>
<p>We don't just build apps for our customers. Savvy builds multi-platform experiences, complex internal systems, and in some cases, entire brands and businesses. To do so, we leverage expertise across several core disciplines: strategy, design, development, and growth. Each project involves many people, each with their own skillsets and specialties. <br/>我們不僅為客戶構建應用程序。精明構建複雜的多平台體驗內部系統，在某些情況下還包括整個品牌和業務。為此，我們利用專業知識跨多個核心學科：戰略，設計，開發和增長。每個項目都涉及許多人都有各自的技能和專長。</p>
<p>Design collaboration puts those minds together, combining their separate, specialized expertise to create solutions that tackle all aspects of a shared goal. Instead of coming at a problem from one angle, design collaboration places that problem in front of all experts, forcing them to consider new perspectives and possibilities.<br/>設計協作將這些思想融合在一起，將他們各自的專業知識結合在一起創建解決方案，以解決共同目標的所有方面。而不是一個人遇到問題角度來看，設計協作將這個問題擺在所有專家面前，迫使他們考慮新觀點和可能性。</p>
<p>For example, we involve our developers early on in the design process to make sure we're accounting for technical opportunities and limitations as soon as possible. This allows us to take advantage of and push our technical capabilities while eliminating costly roadblocks further in the process. It also limits how much a single person can work in a silo, keeping the work in the open and the emphasis on the user needs and product goals.<br/>例如，我們起初設計過程的時候就讓我們的開發人員參與進來，以確保我們盡快解決技術機會和局限性。這使我們可以優勢並推動我們的技術能力，同時進一步消除了昂貴的障礙處理。它還限制了一個人可以在筒倉中工作的數量，從而使工作保持公開狀態並強調用戶需求和產品目標。</p>
<h4>page2</h4>
<p>The right mindset goes a long way in establishing effective collaboration in the design process. It lays the guidelines for who collaborates, how, and to what end.<br/>在設計過程中建立有效的協作時，正確的思維方式大有幫助。 它規定了誰進行協作，如何進行以及達到何種目的的準則。</p>
<p>Designers sometimes think that people who are not designers are not qualified to give good feedback. But great design is more than visuals. It encompasses everything about a product, from its branding to its engineering to its growth.<br/>設計師有時會認為不是設計師沒有資格提供良好的產品反饋。 但是出色的設計不只是視覺效果。 它涵蓋了有關產品的所有內容，從它的品牌，工程技術及其成長。</p>
<p>Design collaboration brings in many people, each with their own perspectives and strengths. It gives everyone a voice. These fresh perspectives give designers more information. Perspectives equip designers to make the right decisions on choices that have lasting impacts on other design, development, and marketing options down the road.<br/>設計協作吸引了許多人，每個人都有自己的觀點和優勢。 它給大家一個聲音。 這些新鮮的觀點為設計師提供了更多信息。 觀點使設計師能夠對其他設計有持久影響的選擇做出正確的決定，開發和營銷選擇。</p>
<p>Collaboration with customers is as important as collaboration with other designers and team members. At Savvy, we keep our customer involved throughout the creation of their product. We take our time to explain options and have discussions with the customer to make sure we understand their thoughts.<br/>與客戶的協作和其他設計師和團隊的協作一樣重要。 在Savvy，我們讓客戶參與其產品的整個創作過程。 我們花些時間來解釋選項，並與客戶進行討論以確保我們了解他們的想法。</p>
<p>This enables us to get buy-in from customers early on and work from clear beginnings and ends.Larger reveals aren't big surprises, and no one gets to the point where they're seeing work for the first time.<br/>這使我們能夠及早獲得客戶的認可，並從明確的起點和終點開始工作。更大的曝光量並不是什麼大驚喜，而且沒人會第一次看到他們的作品。</p>
<p>Customer collaboration means arriving at a more defined product sooner, without costly back-stepping and unnecessary meetings.<br/>客戶協作意味著可以更快地獲得更清晰的產品，而無需付出高昂的代價和不必要的會議。</p>
<p>It's easy to get caught up in your role and ignore the big picture. By involving more people earlier on, you're fostering closer connections with teammates and cultivating a shared responsibility and interest in the success of the product. You're creating a more open and transparent process, as well a more connected and invested team.<br/>很容易陷入角色而忽略全局。 通過儘早讓更多人參與進來，您可以與隊友建立更緊密的聯繫，並培養對產品成功的共同責任和興趣。 您正在創建一個更加開放和透明的流程，以及一個更緊密聯繫和投入的團隊。</p>
<p>Customers come to us with complex challenges and goals. Not to mention, we continue to work with our customers for months, even years, and accumulate vast tomes of knowledge on past decisions, research, and other valuable context.<br/>客戶向我們提出了複雜的挑戰和目標。 更不用說，我們將繼續與客戶合作數月甚至數年，並在過去的決策，研究和其他有價值的背景下積累大量的知識。</p>
<p>By adopting a context-first approach, you can make sure everyone is at the highest level of knowledge. This enables them to make the most informed decisions as they work on the product. To accomplish this, we keep everyone at Savvy updated on relevant information by bringing in all team members early, documenting and recording meetings, establishing some overlap, and treating the next team member in the process like a customer.<br/>通過採用上下文優先的方法，可以確保每個人都具有最高的知識水平。 這樣，他們就可以在產品上做出最明智的決定。 為了做到這一點，我們通過儘早召集所有團隊成員，記錄和記錄會議，建立一些重疊並將過程中的下一個團隊成員像客戶一樣，使Savvy的每個人都獲得有關相關信息的最新信息。</p>
<p>Context is just as important on a case-by-case collaborative basis. Follow these guidelines to keep context first in collaboration:<br/>在個案協作的基礎上，上下文也同樣重要。 請遵循以下準則，以保持協作中的上下文優先：</p>
<p>Provide context before showing your work. Chances are if your work is on the screen while you're giving context, you've lost your audience's attention.<br/>在顯示您的工作之前提供上下文。 在提供背景信息的情況下，如果您的作品出現在屏幕上，那麼您可能會失去聽眾的注意力。</p>
<p>Describe the problem you're trying to solve or goal you're trying to achieve.<br/>描述您要解決的問題或要達到的目標。</p>
<h4>page3</h4>
<p>Present your work as it relates to the problem at hand. Explain your thinking and why you made certain decisions.<br/>介紹與當前問題相關的工作。 說明您的想法以及做出某些決定的原因。</p>
<p>It isn't easy to put your work (and yourself) out there. Emotions can get in the way of providing open and honest feedback, especially when you're worried about hurting the other person's feelings.<br/>將您的工作（和您自己）放在那裡並不容易。 情緒會阻礙您提供坦誠的反饋，尤其是當您擔心會傷害對方的感覺時。</p>
<p>That doesn't mean there's no place for emotion in collaboration. How something makes you feel is important in design. We think of and create solutions for people people who are emotional, and who use emotions in their decisions. Leaving emotion out of the conversation might short-change a potential idea or solution. At best, having only a pragmatic discussion around facts and data won't provide the full picture. At worst, it may be a red herring or provide a false narrative.<br/>這並不意味著在協作中沒有情感的位置。 在設計中，讓您感覺如何很重要。 我們為有情感並在決策中使用情感的人們思考並創建解決方案。 在對話中留下情感可能會縮短潛在的想法或解決方案。 充其量，僅就事實和數據進行務實的討論將無法提供全面的信息。 在最壞的情況下，它可能是鯡魚或提供虛假的敘述。</p>
<p>At Savvy, we empower our team to be "fearless" about receiving feedback. This means letting go of any anxieties about being judged for what we create. It also means understanding that we are stronger together and stand a greater chance of creating something great. In being fearless, we better trust and empower each other to give honest and thoughtful feedback.<br/>在Savvy，我們使我們的團隊對收到反饋“無所畏懼”。 這意味著放開對我們所創造的東西進行判斷的任何焦慮。 這也意味著了解我們<br/>在一起變得更強大，更有機會創造偉大的事物。 在無所畏懼的情況下，我們會更好地相互信任和相互賦予能力，以提供誠實和周到的反饋。</p>
<p>Our team also believes in being fearless about providing feedback. This means understanding the problem that needs solving as well as the customer's brand and goals. It also means asking lots of questions either to uncover relevant thoughts or to help guide decisions.<br/>我們的團隊還相信，不要害怕提供反饋。 這意味著要了解需要解決的問題以及客戶的品牌和目標。 這也意味著問很多問題，以發現相關的思想或幫助指導決策。</p>
<p>Try presenting feedback in an exploratory and guiding manner, with the intent of building up andimproving the work rather than tearing it down.Tweet This<br/>嘗試以探索性和指導性的方式提出反饋意見，以期建立和改進工作而不是拆散工作。</p>
<p>Your feedback should be constructive. Instead of saying you don't like something, frame your feedback to point back to the problem you're trying to help solve. Provide actionable steps on improving the work or at the very least the reasoning behind your thinking. And don't forget to express what you like and why.<br/>您的反饋意見應具有建設性。 與其說您不喜歡某些東西，不如說出您的反饋意見以指出您要幫助解決的問題。提供可行的步驟來改進工作，或者至少提供您思考背後的理由。 並且不要忘了表達您喜歡什麼以及為什麼。</p>
<p>It's one thing to be open and accepting of collaborative feedback, another to parse those thoughts and use them as catalysts to spark your own. This is a more advanced skill that develops over time. One way to practice this is to become a better listener.<br/>開放並接受協作反饋是一回事，解析這些想法並將其用作催生您自己的想法是另一回事。 隨著時間的推移，這是一項更高級的技能。一種實踐方法是成為更好的聽眾。</p>
<p>Often, during a conversation with others, we think more about what we are going to say next rather than what others are saying. This impacts the feedback process, especially in design, because we often know what we want to say before hearing another opinion or solution.<br/>通常，在與他人交談時，我們會更多地考慮接下來要說的內容，而不是別人在說什麼。這會影響反饋過程，尤其是在設計過程中，因為在聽到其他意見或解決方案之前，我們通常會知道我們要說的話。</p>
<p>When you choose to listen first and react second, it allows you to fully understand the feedback someone else is presenting and sets you up to go deeper — what is the perspective they're using and the place they're coming from? Chances are this is a perspective you didn't consider during the creation process. By listening to and understanding the context and reasoning behind the feedback you're receiving, you're opening yourself to more ways of looking at, thinking of, and experiencing your design. You can then test these new perspectives against the challenges, goals, and use cases you're designing for to see if they better suit the user.<br/>當您選擇先聆聽然後再做出反應時，它可以讓您完全理解其他人的反饋，並讓您更深入地了解自己-他們使用的觀點是什麼以及來自何處？很有可能這是您在創建過程中未曾考慮過的觀點。通過聽取並理解所收到反饋背後的上下文和推理，您可以以更多的方式來審視，思考和體驗設計。然後，您可以針對要設計的挑戰，目標和用例來測試這些新觀點，以查看它們是否更適合用戶。</p>
<p>It's easier to be more receptive of feedback when all collaborators practice active listening. Ultimately, the skill of giving great feedback comes from learning how to receive it. As we make an effort to be better listeners, we also find ourselves becoming more humble and, in our opinion,Finding and Using the Right Design Collaboration Tools.<br/>當所有協作者都在積極聆聽時，更容易接受反饋。 最終，提供良好反饋的技能來自學習如何獲得反饋。 當我們努力成為更好的傾聽者時，我們也發現自己變得越來越謙虛，並認為尋找和使用正確的設計協作工具</p>
<h2>IndustrialAndEngineeringProductDesignCollaboration</h2>
<p style="text-align: center;"><strong>工業和工程產品-設計協同</strong></p>
<h4 style="text-align: center;">Create by 40723147</h4>
<p style="text-align: center;"><strong>摘要</strong></p>
<p>Collaborative product design processes of industrial design and engineering design in consumer product companies<br/>工業設計與工程設計消費品公司的協同產品設計過程</p>
<p><br/>This study aims to elucidate how industrial designers and engineering designers collaborate, and how such an alliance reflects in the design process. We conducted in-depth interviews about actual product design projects with 34 industrial and engineering designers from six consumer product manufacturers.<br/>這項研究旨在闡明工業設計師和工程設計師如何協作，以及這種聯盟如何體現在設計過程中。 我們與來自六個消費產品製造商的34名工業和工程設計師進行了有關實際產品設計項目的深入採訪。</p>
<p>It is often argued that engineering designers use an ‘outward approach e developing from function to appearance’ whereas industrial designers follow an ‘inward approach e developing from appearance to functions’<br/>人們通常認為，工程設計師使用“從功能到外觀開發的外向方法”，而工業設計師則採用“從外觀到功能開發的內向方法”</p>
<p>providing initial requirements for industrial designers’ responsibilities. In or-der to succeed in a highly competitive market, companies should create collaborative processes of industrial design and engineering design by prop-erly adopting outside-in and inside-out approaches to match their situations and objectives.<br/>為工業設計師的職責提供初步要求。為了在競爭激烈的市場中取得成功，公司應通過適當地採用從內而外的方法來匹配其情況和目標，從而創建工業設計和工程設計的協作過程。</p>
<p>This paper serves two goals: firstly, to shed light on the form of the original collaborative product design process applied in practice, and secondly to determine different types of processes used for different purposes under different conditions.<br/>本文有兩個目標：首先，闡明在實踐中應用的原始協作產品設計過程的形式；其次，確定在不同條件下用於不同目的的不同類型的過程。</p>
<p>The recurring term ‘collaborative product design’ throughout this article refers to a product design created by the collaborative contribution of industrial design and engineering design.<br/>在本文中，“協作產品設計”的重複用語是指通過工業設計和工程設計的共同貢獻而創建的產品設計。</p>
<hr/>
<p><strong></strong></p>
<div><strong></strong></div>
<div><span><strong>章節一</strong></span></div>
<div><strong></strong></div>
<div><strong></strong></div>
<div><strong>Research approach (研究方法)</strong>
<p>we adopted three criteria for selecting research targets:</p>
<p>我們採用了三個標準來選擇研究目標：</p>
<table>
<tbody>
<tr>
<td><span style="color: #000000; background-color: #00ffff;">(1) multiple companies in a similar product domain;</span></td>
</tr>
<tr>
<td><span style="color: #000000; background-color: #00ffff;">(2) multiple participants from both engineering and industrial design departments;</span></td>
</tr>
<tr>
<td><span style="color: #000000; background-color: #00ffff;">(3)projects already completed through a whole product development cycle.</span></td>
</tr>
<tr>
<td><span style="background-color: #ffff00;">（1）多個產品領域相似的公司</span></td>
</tr>
<tr>
<td><span style="background-color: #ffff00;">（2）來自工程和工業設計部門的多名參與者</span></td>
</tr>
<tr>
<td><span style="background-color: #ffff00;">（3）在整個產品開發週期中已經完成的項目。</span></td>
</tr>
</tbody>
</table>
<p></p>
<p>1.1 In-depth interview(深度訪談)</p>
<p>1.1.1 Selection of case companies(案例公司的選擇)</p>
<p>criteria adopted are as follows:</p>
<p>採用的標準如下：</p>
<p>1) The companies should produce mid-complex electronic consumer products.<br/>公司應生產中等複雜的電子消費產品。</p>
<p>2) They should have independent industrial design and engineering design departments<br/>他們應該有獨立的工業設計和工程設計部門</p>
<p>3) They should be leading companies in the market producing well-designed high-quality products<br/>他們應該是市場領先的公司，生產精心設計的高質量產品</p>
<p>The first criterion enabled the selection of manufacturers with similar in product domain context wherein both industrial designers and engineering designers play important roles.<br/>第一條標準使得能夠選擇在產品領域中具有相似地位的製造商，其中工業設計師和工程設計師都扮演著重要角色。</p>
<p>Manufactures producing simple consumer products will require a lesser role from engineering designers.<br/>生產簡單消費品的製造商在工程設計師中的作用將減少。</p>
<p><br/>1.1.2 Selection of interviewees(選擇受訪者)</p>
<p>1) More than two years of experience in the company<br/>    兩年以上的公司經驗</p>
<p>2) Engagement in at least one cycle of the product development process<br/>    參與產品開發過程的至少一個週期</p>
<p>3) Close collaboration and interaction with counterparts (i.e. industrial designers vs. engineering designers)<br/>與同行（即工業設計師與工程設計師）的緊密協作和互動</p>
<p>1.1.3 Interview procedure(面試程序)</p>
<p>We firstly listed about 20 detailed questions and grouped them into four main themes:我們首先列出了約20個詳細問題，並將其分為四個主要主題：</p>
<p><span><span style="background-color: #ffff00;">1) personal information,   <span style="background-color: #00ffff;">    1）個人信息，</span></span></span><br/><span><span><span style="background-color: #00ffff;">2) design process,           </span><span style="background-color: #ffff00;">  </span></span><span style="background-color: #ffff00;">  2）設計過程，</span></span><br/><span><span style="background-color: #ffff00;">3) role and expertise       </span><span style="background-color: #00ffff;">  </span></span><span style="background-color: #00ffff;">   3）角色和專業知識</span><br/><span style="background-color: #00ffff;">4) interaction.                   </span><span><span style="background-color: #ffff00;">    4）互動。           </span>  </span></p>
<p>We then formulated four key questions:<br/>然後，我們提出了四個關鍵問題：</p>
<p>1) What is your position and role in the team?<br/>您在團隊中的職位和角色是什麼？</p>
<p>2) How did the product design process proceed and what happened during the process?<br/>產品設計過程如何進行？過程中發生了什麼？</p>
<p>3) What tasks did you have in the design process, and what knowledge and skills you had required to carry out the projects?<br/>您在設計過程中擁有哪些任務，以及執行項目所需的知識和技能？</p>
<p>4) How did industrial design(ers) and engineering design(ers) interact with each other during the design process?<br/>工業設計和工程設計在設計過程中如何相互影響？</p>
<p>The interview started with the first question about interviewees’ roles in their teams and working experiences, followed by the product development<br/>訪談首先要了解的問題是受訪者在團隊中的角色和工作經驗，然後是產品開發‧</p>
<hr/>
<div>1.2 Identifying design processes(確定設計過程)<br/><br/>1.2.1 Identifying design processes that each individual experienced<br/> (確定每個人經歷的設計過程)<br/> <br/>In the state-transition perspective, Reymen (2001) described a design process as the process of moving one state to another by performing a task at each stage and evaluating design activities. This is consistent with stage-gate models, where design activity happens at each stage and design output of the stage is evaluated at design review whereby a decision is made among whether to go to the next stage,<br/>從狀態轉換的角度來看，Reymen（2001）將設計過程描述為通過在每個階段執行任務並評估設計活動將狀態從一種狀態轉移到另一種狀態的過程。這與階段門模型一致，在階段門模型中，每個階段都會進行設計活動，並在設計評審中評估階段的設計輸出，從而決定是否進入下一階段，<br/><br/>This perspective is advocated from most stage-based models (Wynn &amp; Clarkson, 2005). A stagebased model is made up of action that is intended to perform a task, and a decision that is to intended to evaluate the outcomes of performing the task; the completion of which constitutes progression to the next stage<br/>大多數基於階段的模型都提倡這種觀點（Wynn＆Clarkson，2005）。基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；這項工作的完成構成了下一階段的發展<br/><br/>Taken into the state-transition perspective, there are two activities: performing task and evaluating outcomes.<br/>從狀態轉換的角度來看，有兩個活動：執行任務和評估結果。</div>
<div></div>
<div>Mostly, evaluation happens within a relatively short period of time to decide between ‘go forward, repeat, or drop.’ Hence, we named these kinds of activities (evaluation, design review, gate check, decision-making) as ‘event.’ At this juncture, we have two coding categories;<br/>‘task’ and ‘event.’ In conclusion, we can model a design process with four coding categories; ‘task,’ ‘event,’ ‘information flow,’ and ‘interaction,’ and can be represented with the connection of stages.<br/>通常，評估是在相對較短的時間內進行的，以便在“前進，重複或下降”之間做出決定，因此，我們將這些類型的活動（評估，設計評審，檢查，決策）稱為“事件”。 目前，我們有兩個編碼類別：<br/>總而言之，我們可以使用四個編碼類別對設計過程進行建模。 “任務”，“事件”，“信息流”和“互動”，並且可以通過階段的關聯來表示。<br/><br/>We identified process elements from every piece of transcribed interview data.<br/>我們從每個轉錄的訪談數據中識別出流程要素。<br/><br/>Two researchers executed the whole procedures.<br/>兩名研究人員執行了整個程序。<br/><br/>One researcher firstly constructed partial design processes, and the other researcher examined them by inspecting the interview data.<br/>一位研究人員首先構建了部分設計流程，另一位研究人員通過檢查訪談數據對其進行了檢查。<br/><br/>1.2.2 Identifying collaborative product design processes(確定協作產品設計流程)<br/><br/>The next stage was to combine each company’s design processes into collaborative design processes via a ‘mosaic method.’ We firstly collected partial designprocesses from a particular project in a company.<br/>下一步是通過“馬賽克方法”將每個公司的設計過程組合為協作設計過程。我們首先從公司的特定項目中收集了部分設計過程。<br/><br/>The partial processes extracted from industrial designers’ interview data provided rich information on industrial design activities,<br/>從工業設計師的訪談數據中提取的部分過程為工業設計活動提供了豐富的信息，<br/><br/>This work was done by crosschecking interview data in each company while evaluating the meaning and context of the specific terms. Actually, designers seemed to understand each company’s documented design process where standard terminology was defined, but were not particularly conscious of it. It seemed that they ignoredthe standardized process because the market situation was pushing them to move fast. Language difference is also a possible cause of the term difference. In the product design area, native words and borrowed words are mixed in use in Korea. For example, we use both borrowed words and native words indicating ‘design’ in English. Besides, cultural and locational differences of the two teams are likely to cause term difference.<br/>通過交叉檢查每個公司的面試數據，同時評估特定術語的含義和上下文來完成這項工作。 實際上，設計師似乎了解每家公司定義了標準術語的文件化設計過程，但並沒有特別意識到這一點。 他們似乎忽略了標準化流程，因為市場形勢迫使他們迅速採取行動。 語言差異也是造成術語差異的可能原因。 在產品設計領域，韓國語中的母語和借來的單詞混合使用。 例如，我們同時使用借用字詞和用英語表示“設計”的本地字詞。 此外，兩支球隊的文化和位置上的差異很可能會導致期限上的差異。<br/><br/><br/>1.2.3 Simplifying the processes(簡化流程)<br/><br/>We found that there was a pattern in a group of small sequential stages. There is a major job completed going through all sequential stages. After completing it, a clear new phase starts with another job. We defined those small stages as ‘process chunks.’<br/>我們發現在一組小的連續階段中存在一種模式。所有主要階段都完成了一項主要工作。完成後，一個清晰的新階段從另一個工作開始。我們將這些小階段定義為“流程塊”。<br/><br/>The internal process in a process chunk starts with the initial input and runs across small stages inside. Iteration or feedback can happen among small stages inside the chunk. Finally, they make the final decision about the final outcomes.<br/>流程塊中的內部流程從初始輸入開始，並在內部的各個小階段中運行。迭代或反饋可能在塊內的各個小階段之間發生。最後，他們對最終結果做出最終決定。<br/><br/>The process flow between the two process chunks has a little chance to be reversed after the previous outcome goes into the input of the next chunk. The cross-teams generally make the final design, which is approved by the top manager at each chunk. To go back to the previous chunk means that it could not meet the timeline to the market.<br/>在前一個結果進入下一個塊的輸入之後，兩個過程塊之間的過程流幾乎沒有機會被逆轉。 跨團隊通常進行最終設計，並由高層經理在每個工作組中批准。 回到上一個區塊意味著它無法滿足市場時間表。<br/><br/>Thus, there should be a top management’s decision on the issue. Based on interview data, they would rather drop the project than go back to the previous phase.<br/><br/>因此，應該由最高管理者對此問題做出決定。 根據訪談數據，他們寧願放棄該項目，也不願返回上一個階段。<br/><br/>We named the process chunks by their main jobs. While naming the chunks,we found that the term ‘concept design’ is used differently by engineering design and industrial design.<br/>我們通過其主要工作來命名流程塊。 在命名這些塊時，我們發現“概念設計”一詞在工程設計和工業設計中的用法有所不同。<br/><br/>Concept design in engineering design is about technical concepts related to how a product works by developing broad solutions to the working structure and functions<br/>工程設計中的概念設計是與技術概念有關的技術概念，該技術概念通過為工作結構和功能開發廣泛的解決方案來與產品的工作方式相關<br/><br/>1.2.4 Determining types of collaborative design processes(確定協作設計過程的類型)<br/><br/>We compared and categorized the 12 simplified collaborative product design processes based on similarities in their process structure, input and outcomes of process chunks and phases, and interaction between industrial designers and engineering designers.<br/>我們根據流程結構，流程塊和階段的輸入和結果的相似性以及工業設計師和工程設計師之間的交互性，對12個簡化的協作產品設計流程進行了比較和分類。<br/><br/>Therefore, examining the types of inputs and outcomes of phases give a clue to determine how the overall process flows. Finally, we evaluated the interaction between industrial designers and engineering designers within a phase.<br/>因此，檢查階段的輸入和結果的類型為確定整個流程的流程提供了線索。最後，我們評估了一個階段中工業設計師和工程設計師之間的互動。</div>
</div><h1>紀錄</h1>
<p>紀錄每週專案(亂數分組紀錄、可攜系統紀錄、四輪小車紀錄)進度</p>
<h2>亂數分組紀錄</h2>
<p>W2：<br/>相關資料尋找、查詢、閱讀<br/>簡易python撰寫 練習 運用 <br/>編寫亂數分組程序<br/>討論其關聯性及應用</p>
<p><span>W3：<br/>製作相關內容整理<br/></span><span>編輯程序 流程最簡化<br/></span><span>PDF製作 編排整理網誌 Revral 撰寫</span></p>
<p></p>
<h2>可攜系統紀錄</h2>
<p>W2：<br/>安裝 python, SciTE, Portablegit, msys2, <span>Tiny C Compiler, Jupyterlab, Fossil SCM, Leo Editor 和 Flutter 放入可攜系統(有先放先前的putty和ssh到測試是否可以順利使用ssh改版)。</span></p>
<p><span>W3：<br/>配置webots到可攜系統上，測試msys2裡建立gcc編譯環境。</span></p>
<p><span>W4：<br/>將 xelatex 配置到可攜系統上，完成測試msys2裡建立gcc編譯環境。<br/></span></p>
<p><span><span>W5：<br/>將 CoppeliaSim 放到可攜系統上。將 leo 升級到6.2.1。<br/></span></span></p>
<h2>四輪小車紀錄</h2>
<p>W2</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim User Manual</a> 內容分析</p>
<p>了解製作四輪機器人所需功能</p>
<p>W3</p>
<p><span>了解製作四輪機器人所需功能(<a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim User Manual</a>)</span></p>
<p><span>著手進行機器人製作</span></p>
<p><span>PDF製作</span></p>
<p></p>